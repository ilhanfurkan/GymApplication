@using Entities.Concrete
@model AppointmentSeanceUserModel;
@{
    ViewData["Title"] = "Update";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}



<div class="p-2">
    <h3 style="text-align:center;">Update Appointment</h3>
     @using (Html.BeginForm("Update", "UserHourTrainer", FormMethod.Post, new { @class = "form-group" }))
    {
        @Html.TextBoxFor(uht=>uht.UserHourTrainer.AppointmentId,"",new{@class="form-control",@type="hidden"})

        @Html.Label("Date")
        @Html.TextBoxFor(uht=>uht.UserHourTrainer.Date,"",new{@class="form-control"})
        @Html.ValidationMessage("Date", "", new { @class = "text-danger" })
        <br />

        @Html.Label("Minute")
        @Html.TextBoxFor(uht=>uht.UserHourTrainer.Hours,"",new{@class="form-control"})
        @Html.ValidationMessage("Hours", "", new { @class = "text-danger" })

        <br />

        <label>Seance</label>
        <select class="form-control" name="seanceId">


            @foreach (var item in @Model.HourTrainers)
            {


                if (item.SeanceId == @Model.UserHourTrainer.SeanceId)
                {
                    <option value="@item.SeanceId" selected>@item.hour.Hours - @item.trainer.TrainerFirstName.ToUpper() @item.trainer.TrainerLastName.ToUpper()</option>
                }
                else
                {
                    <option value="@item.SeanceId">@item.hour.Hours-@item.trainer.TrainerFirstName.ToUpper() @item.trainer.TrainerLastName.ToUpper()</option>
                }
            }
        </select>
        @Html.ValidationMessage("SeanceId", "", new { @class = "text-danger" })
        <br />


        <label>User</label>
        <select class="form-control" name="UserId">


            @foreach (var item in @Model.Users)
            {


                if (item.UserId == @Model.UserHourTrainer.UserId)
                {
                    <option value="@item.UserId" selected>@item.FirstName.ToUpper()  @item.LastName.ToUpper()</option>
                }
                else
                {
                    <option value="@item.UserId">@item.FirstName.ToUpper()  @item.LastName.ToUpper()</option>
                }
            }
        </select>
        @Html.ValidationMessage("UserId", "", new { @class = "text-danger" })
        <br />


          @Html.Label("Active")
        <select class="form-control" name="ActivePassive">
            @if (Model.UserHourTrainer.ActivePassive)
            {
                <option value="True" selected>Active</option>
                <option value="False">Passive</option>
            }
            else
            {
                <option value="True">Active</option>
                <option value="False" selected>Passive</option>
            }
        </select>
        @Html.ValidationMessage("ActivePassive", "", new { @class = "text-danger" })
        <br />

        @Html.Label("Case")
        <select class="form-control" name="deleted">
            @if (Model.UserHourTrainer.Deleted)
            {
                <option value="True" selected>Deleted</option>
                <option value="False">--</option>
            }
            else
            {
                <option value="True">Deleted</option>
                <option value="False" selected>--</option>
            }
        </select>
        @Html.ValidationMessage("Deleted", "", new { @class = "text-danger" })
        <br />

        <input class="button-change form-control btn btn-success" type="submit" value="Update Appointment" />
        
    }

</div>

