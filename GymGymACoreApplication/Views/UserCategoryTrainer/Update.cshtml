@using Entities.Concrete
@model RegistrationPacketUserModel
@{
    ViewData["Title"] = "Update";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="p-2">
    <h3 style="text-align:center;">Update Registration</h3>

    @using (Html.BeginForm("Update", "userCategoryTrainer", FormMethod.Post, new { @class = "form-group" }))
    {
        @Html.TextBoxFor(userCategoryTrainer=>userCategoryTrainer.registrationModel.RegistrationId,new { @class = "form-control",@name="userCategoryTrainerId",@value="@Model.userCategoryTrainerId",@type="hidden"})
        @Html.Label("Date Of Registration ")
               <input class="form-control" type="text" name="DateOfRegistration" value="@Model.registrationModel.DateOfRegistration.ToString().Split(" ")[0]" />
        @Html.ValidationMessageFor(userCategoryTrainer=>userCategoryTrainer.registrationModel.DateOfRegistration,"",new { @class ="text-danger" })
        <br />
      @Html.Label("Payment")
        <select class="form-control" name="PaymentType">
            @if (Model.registrationModel.PaymentType)
          {
                <option value="True" selected>Cash</option>
                <option value="False">Credit Card</option>
            }
            else
            {
                <option value="True">Cash</option>
                <option value="False" selected>Credit Card</option>
            }
            
            </select>
        <br />
        @Html.Label("Price")
        @Html.TextBoxFor(userCategoryTrainer=>userCategoryTrainer.registrationModel.Price ,new { @class = "form-control" })
        @Html.ValidationMessageFor(userCategoryTrainer=>userCategoryTrainer.registrationModel.Price,"",new { @class ="text-danger" })
        <br />
          <label>User</label>
                    <select class="form-control" name="UserId">

            @foreach (var item in @Model.userModel)
            {
                if (item.UserId == @Model.registrationModel.UserId)
                {
                        <option value="@item.UserId" selected>@item.FirstName.ToUpper() @item.LastName.ToUpper()</option>
                }
                else
                {
                        <option value="@item.UserId">@item.FirstName.ToUpper() @item.LastName.ToUpper()</option>
                }
            }
                    </select>
        @Html.ValidationMessage("UserId","",new { @class ="text-danger" })
        <br />
            <label>Packet</label>
                        <select class="form-control" name="PacketId">
            @foreach (var item in @Model.packetModel)
            {
                if (item.PacketId == @Model.registrationModel.PacketId)
                {
                        <option value="@item.PacketId" selected>@item.PacketName</option>
                }
                else
                {
                        <option value="@item.PacketId">@item.PacketName</option>
                }
            }
                        </select>
        @Html.ValidationMessage("PacketId","",new { @class ="text-danger" })
        <br />
       @Html.Label("Case")
        <select class="form-control" name="Deleted">
            @if (Model.registrationModel.Deleted)
          {
                <option value="True" selected>Deleted</option>
                <option value="False">--</option>
            }
            else
            {
                <option value="True">Deleted</option>
                <option value="False" selected>--</option>
            }
        </select>
        <br />



        <input class="button-change form-control btn btn-success" type="submit" value="Update Registration" />
    }
</div>


