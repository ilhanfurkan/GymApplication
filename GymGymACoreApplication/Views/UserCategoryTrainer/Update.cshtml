@using Entities.Concrete
@model RegistrationPacketUserModel
@{
    ViewData["Title"] = "Update";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="p-2">
    <h3 style="text-align:center;">Update Registration</h3>

    @using (Html.BeginForm("Update", "userCategoryTrainer", FormMethod.Post, new { @class = "form-group" }))
    {
        @Html.TextBoxFor(uct=>uct.UserCategoryTrainer.RegistrationId,"",new{@class="form-control", @type="hidden"})
        @Html.Label("Date Of Registration ")
        @Html.TextBoxFor(uct=>uct.UserCategoryTrainer.DateOfRegistration,"",new{@class="form-control"})
        @Html.ValidationMessage("DateOfRegistration","",new { @class ="text-danger" })
        <br />
      @Html.Label("Payment")
        <select class="form-control" name="PaymentType">
            @if (Model.UserCategoryTrainer.PaymentType)
          {
                <option value="True" selected>Cash</option>
                <option value="False">Credit Card</option>
            }
            else
            {
                <option value="True">Cash</option>
                <option value="False" selected>Credit Card</option>
            }
            </select>
        @Html.ValidationMessage("PaymentType","",new { @class ="text-danger" })

        <br />
        @Html.Label("Price")
        @Html.TextBoxFor(uct=>uct.UserCategoryTrainer.Price,"",new{@class="form-control"})
        @Html.ValidationMessage("Price","",new { @class ="text-danger" })
            <br />
          <label>User</label>
        @Html.DropDownListFor(m => m.UserCategoryTrainer.UserId, new SelectList(Model.Users, "UserId", "FirstName"), "--Update User--", new { @class = "form-control" })
        @Html.ValidationMessage("UserId","",new { @class ="text-danger" })
        <br />
            <label>Packet</label>
        @Html.DropDownListFor(m => m.UserCategoryTrainer.PacketId, new SelectList(Model.CategoryTrainers, "PacketId", "PacketName"), "--Update Packet--", new { @class = "form-control" })
        @Html.ValidationMessage("PacketId","",new { @class ="text-danger" })
        <br />
       @Html.Label("Case")
        <select class="form-control" name="Deleted">
            @if (Model.UserCategoryTrainer.Deleted)
          {
                <option value="True" selected>Deleted</option>
                <option value="False">--</option>
            }
            else
            {
                <option value="True">Deleted</option>
                <option value="False" selected>--</option>
            }
        </select>
        @Html.ValidationMessage("Deleted","",new { @class ="text-danger" })
        <br />
        <input class="button-change form-control btn btn-success" type="submit" value="Update Registration" />
    }
</div>


