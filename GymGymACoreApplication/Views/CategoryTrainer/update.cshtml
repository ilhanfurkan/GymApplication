@using Entities.Concrete;
@model PacketCategoryTrainerModel;
@{
    ViewData["Title"] = "update";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="p-2">
    <h3 style="text-align:center;">Update Packet</h3>
    @using (Html.BeginForm("update", "CategoryTrainer", FormMethod.Post, new { @class = "form-group" }))
    {
        @Html.TextBox("PacketId",Model.CategoryTrainer.PacketId,new {@class="form-control",@type="hidden"})

        @Html.Label("Packet Name")
        @Html.TextBox("PacketName",Model.CategoryTrainer.PacketName,new { @class = "form-control"})
        @Html.ValidationMessage("PacketName","",new { @class ="text-danger"})
                <br />
        @Html.Label("Packet Detail")
        @Html.TextBox("PacketDetail",Model.CategoryTrainer.PacketDetail,new { @class = "form-control"})
        @Html.ValidationMessage("PacketDetail","",new { @class ="text-danger"})
                <br />
        @Html.Label("Packet Price")
        @Html.TextBox("PacketPrice",Model.CategoryTrainer.PacketPrice,new { @class = "form-control"})
        @Html.ValidationMessage("PacketPrice","",new { @class ="text-danger"})
                <br />
                @Html.Label("Packet Price Without Discount")
		@Html.TextBox("OldPrice",Model.CategoryTrainer.OldPrice,new { @class = "form-control", @placeholder="Please Enter Packet Price Without Discount" })
        @Html.ValidationMessage("OldPrice","",new { @class ="text-danger"})

			<br />
        @Html.Label("Right")
        @Html.TextBox("Right",Model.CategoryTrainer.Right,new { @class = "form-control"})
        @Html.ValidationMessage("Right","",new { @class ="text-danger" })
        <br />
        <label>Categories</label>
             <select class="form-control" name="CategoryId">


            @foreach (var item in @Model.Categories)
            {


                if (item.CategoryId == @Model.CategoryTrainer.CategoryId)
                {
                                                        <option value="@item.CategoryId" selected>@item.CategoryName</option>
                }
                else
                {
                                                        <option value="@item.CategoryId">@item.CategoryName</option>
                }
            }
                    </select> 
        @Html.ValidationMessage("CategoryId",new { @class ="text-danger" })
        
        <br />
            <label>Trainers</label>
                <select class="form-control" name="TrainerId">


            @foreach (var item in @Model.Trainers)
            {


                if (item.TrainerId == @Model.CategoryTrainer.TrainerId)
                {
                            <option value="@item.TrainerId" selected>@item.TrainerFirstName.ToUpper() @item.TrainerLastName.ToUpper()</option>
                }
                else
                {
                            <option value="@item.TrainerId">@item.TrainerFirstName.ToUpper() @item.TrainerLastName.ToUpper()</option>
                }
            }
                        </select>
@*        @Html.DropDownListFor(m => m.CategoryTrainer.TrainerId, new SelectList(Model.Trainers, "TrainerId", "TrainerFirstName" ,"TrainerLastName"), "--Update Trainer--", new { @class = "form-control" })
*@        @Html.ValidationMessage("TrainerId",new { @class ="text-danger" })
        <br />
                @Html.Label("Active")
        <select class="form-control" name="ActivePassive">
            @if (Model.CategoryTrainer.ActivePassive)
            {
                <option value="True" selected>Active</option>
                <option value="False">Passive</option>
            }
            else
            {
                <option value="True">Active</option>
                <option value="False" selected>Passive</option>
            }
        </select>
        @Html.ValidationMessage("ActivePassive",new { @class ="text-danger" })
            <br />

        @Html.Label("Case")
        <select class="form-control" name="Deleted">
            @if (Model.CategoryTrainer.Deleted)
            {
                <option value="True" selected>Deleted</option>
                <option value="False">--</option>
            }
            else
            {
                <option value="True">Deleted</option>
                <option value="False" selected>--</option>
            }
        </select>
        
       @Html.ValidationMessage("Deleted",new { @class ="text-danger" })
            <br />
        <input class="button-change form-control btn btn-success" type="submit" value="Update Packet" />
    }
</div>


@*<select class="form-control" name="CategoryId">
			@foreach (var item in @Model.Categories)
			{
                if (item.CategoryId == @Model.CategoryTrainer.CategoryId)
                {
                                    <option value="@item.CategoryId" selected>@item.CategoryName</option>
                }
                else
                {
                                    <option value="@item.CategoryId">@item.CategoryName</option>
                }
			}
				</select>*@